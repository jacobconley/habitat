#!/bin/bash
set -euo pipefail 
set +H

GOPATH="${GOPATH:-$HOME/go}"
cd $GOPATH/src/github.com/jacobconley/habitat

SRV=localhost:3000
cd test-fixtures/userland



echo "test-e2e: Building test fixture server"
go build main.go 


echo "test-e2e: starting server"
HABITAT_ENV=test
./main > /dev/null &
SRV_PID=$!


# Wait for it to be ready 
RETRY_LIMIT=5
i=0
while true
do
    sleep 0.5
    if curl --silent $SRV > /dev/null; then 
        echo "test-e2e: connected"
        break
    else 
        i=$((i + 1))

        if [[ $i > $RETRY_LIMIT ]]; then 
            echo "test-e2e: Could not connect to test server; retry limit exceeded"
            exit 1
        fi

        echo "[X] retrying ($i / $RETRY_LIMIT)"
        sleep 1
    fi
done


echo "test-e2e: Starting tests"



# This constructs an array of everything but init_test.go, allowing us to run it first and then everything else
# When I first wrote this I assumed it had to be run on init because of the name, but now that I look at it I don't think there's anything special about it.  lol.  I'll keep this anyways 
cd ../../test/e2e 
TESTS=$(echo *)
TESTS=${TESTS[@]/init_test.go}

if 
    go clean -testcache
    go test init_test.go && go test -v $TESTS
then 
    TESTFAIL=0
    echo "test-e2e: All tests passed"
else 
    TESTFAIL=1 
    echo "test-e2e: Tests failed"
fi 


echo "test-e2e: Stopping server"
kill $SRV_PID


if [ $TESTFAIL == 1 ]; then exit 1; fi 